{"version":3,"file":"background.js","mappingssources":["webpack://twitter-video-downloader/./src/background.js"],"sourcesContent":["var initiator = \"\";\nvar videoUrl = \"\";\n\nfunction getTab() {\n    return chrome.tabs.query({ active: true, currentWindow: true });\n}\n\nfunction isHomePage(tabs) {\n    if (tabs[0].url.startsWith(\"https://twitter.com/home\")) return true;\n    return false;\n}\n\nfunction getInfoAboutPost() {\n    const thumb = document\n        .querySelector(\"meta[property='og:image']\")\n        .getAttribute(\"content\");\n    const desc = document\n        .querySelector(\"meta[property='og:description']\")\n        .getAttribute(\"content\");\n    const url = document.URL;\n    chrome.runtime.sendMessage({ thumb, desc, url });\n}\n\nfunction onBeforeRequestCallback(details) {\n    getTab().then((tabs) => {\n        if (isHomePage(tabs)) return;\n\n        chrome.storage.local.get({ videoUrl: \"notdefined\" }, (results) => {\n            if (results.videoUrl === \"notdefined\") {\n                chrome.storage.local.set({ videoUrl: details.url }, () => {\n                    console.debug(`on callback set value for ${details.url}`);\n                    chrome.scripting.executeScript({\n                        target: { tabId: tabs[0].id },\n                        func: getInfoAboutPost,\n                    });\n                });\n            }\n        });\n    });\n}\n\nfunction webNavigationListener(details) {\n    console.debug(`Setting actualPage to ${details.url}`);\n    chrome.storage.local.set({ actualPage: details.url });\n    chrome.storage.local.remove(\"videoUrl\", () =>\n        console.debug(\"Removing video url\")\n    );\n}\n\nchrome.webNavigation.onHistoryStateUpdated.addListener(webNavigationListener, {\n    url: [\n        {\n            hostEquals: \"twitter.com\",\n            pathContains: \"status\",\n        },\n    ],\n});\n\n// event listeners\nchrome.webRequest.onBeforeRequest.addListener(onBeforeRequestCallback, {\n    urls: [\"https://video.twimg.com/*/*.m3u8?tag*\"],\n});\n\n// executes when getInfoAboutPost is executed\nchrome.runtime.onMessage.addListener((req, sender, _) => {\n    if (!sender.tab) return;\n\n    console.debug(\"updating all infos for post... \" + JSON.stringify(req));\n    let { thumb, desc, url } = req;\n    chrome.storage.local.get(\n        {\n            posts: [],\n            videoUrl: \"notdefined\",\n        },\n        (results) => {\n            if (results.posts.some(post => post.url === url)) return;\n            let { videoUrl } = results;\n            chrome.storage.local.set({\n                posts: [\n                    ...results.posts,\n                    {\n                        thumb,\n                        desc,\n                        url,\n                        videoUrl,\n                    },\n                ],\n            });\n        }\n    );\n});\n\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n    if (!sender.tab) {\n        // popup\n        if (msg === \"get-posts\") {\n            chrome.storage.local.get(\"posts\", (results) => {\n                console.debug(`sending posts=${JSON.stringify(results.posts)}`);\n                sendResponse(results.posts);\n            });\n        }\n        return true;\n    }\n});\n"],"names":[],"sourceRoot":""}